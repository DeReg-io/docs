"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[671],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(r),d=a,m=u["".concat(c,".").concat(d)]||u[d]||g[d]||o;return r?n.createElement(m,i(i({ref:t},p),{},{components:r})):n.createElement(m,i({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9881:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:1,slug:"/"},i="Configure Smart Contract",s={unversionedId:"intro",id:"intro",title:"Configure Smart Contract",description:"Easy Trigger provides you with a webhook that will trigger a specific smart contract function when called.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/",permalink:"/docs/",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,slug:"/"},sidebar:"tutorialSidebar",next:{title:"Create Easy Trigger",permalink:"/docs/create-easy-trigger"}},c={},l=[{value:"Smart Contract Integration (using <code>foundry</code>)",id:"smart-contract-integration-using-foundry",level:2},{value:"1. Installation",id:"1-installation",level:3},{value:"2. Obtain your UserID",id:"2-obtain-your-userid",level:3},{value:"3. Add to Smart Contract",id:"3-add-to-smart-contract",level:3},{value:"3a. Automatically trigger OpenZeppelin&#39;s <code>Pausable._pause</code>:",id:"3a-automatically-trigger-openzeppelins-pausable_pause",level:3},{value:"3b. Custom trigger logic",id:"3b-custom-trigger-logic",level:3}],p={toc:l},u="wrapper";function g(e){let{components:t,...o}=e;return(0,a.kt)(u,(0,n.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"configure-smart-contract"},"Configure Smart Contract"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Easy Trigger")," provides you with a webhook that will trigger a specific smart contract function when called."),(0,a.kt)("h2",{id:"smart-contract-integration-using-foundry"},"Smart Contract Integration (using ",(0,a.kt)("inlineCode",{parentName:"h2"},"foundry"),")"),(0,a.kt)("h3",{id:"1-installation"},"1. Installation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"foundry install dereg-io/ez-trigger\n")),(0,a.kt)("h3",{id:"2-obtain-your-userid"},"2. Obtain your UserID"),(0,a.kt)("p",null,"Login or SignUp at ",(0,a.kt)("a",{parentName:"p",href:"https://app.dereg.io"},"app.dereg.io"),"."),(0,a.kt)("p",null,"After logging in, at the top right of the page you will find your ",(0,a.kt)("em",{parentName:"p"},"UserID"),".\nAdd it to your smart contract code (see ",(0,a.kt)("a",{parentName:"p",href:"/#3-add-to-smart-contract"},"3."),"), this ensure\nonly you can create an ",(0,a.kt)("em",{parentName:"p"},"Easy Trigger")," for your smart contract."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Obtain UserID",src:r(8008).Z,width:"2038",height:"300"})),(0,a.kt)("h3",{id:"3-add-to-smart-contract"},"3. Add to Smart Contract"),(0,a.kt)("h3",{id:"3a-automatically-trigger-openzeppelins-pausable_pause"},"3a. Automatically trigger OpenZeppelin's ",(0,a.kt)("inlineCode",{parentName:"h3"},"Pausable._pause"),":"),(0,a.kt)("p",null,"Assuming your contract is already using ",(0,a.kt)("a",{parentName:"p",href:"https://docs.openzeppelin.com/contracts/4.x/api/security#Pausable"},"OpenZeppelin's Pausable"),"\nmixin all you need to do is import the ",(0,a.kt)("inlineCode",{parentName:"p"},"TriggerablePause")," preset and have your contract inherit from it and replace the example ",(0,a.kt)("em",{parentName:"p"},"UserID")," with your\n",(0,a.kt)("em",{parentName:"p"},"UserId")," (see ",(0,a.kt)("a",{parentName:"p",href:"/#2-obtain-your-userid"},"2."),")."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"It's safe to share your ",(0,a.kt)("em",{parentName:"p"},"UserID")," and have it be part of your public smart contract code. The ",(0,a.kt)("em",{parentName:"p"},"UserID"),"\nis necessary for us to be able to associate contracts to their respective user accounts and prevent\ndifferent users from triggering each other's contracts.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},'// Add Easy Trigger import, can be shortened if remappings.txt configured\nimport { TriggerablePause } from "lib/ez-trigger/src/presets/TriggerablePause.sol";\n\n// Add `TriggerablePause` to parent contracts.\ncontract YourContract is Pausable, TriggerablePause("1234567b-fbe1-1234-1234-12abcde123a1") {\n    // Your contract\'s custom logic.\n}\n')),(0,a.kt)("h3",{id:"3b-custom-trigger-logic"},"3b. Custom trigger logic"),(0,a.kt)("p",null,"If you want something more custom to be executed for your contract's trigger you can use the base ",(0,a.kt)("inlineCode",{parentName:"p"},"Triggerable")," contract and implement the ",(0,a.kt)("inlineCode",{parentName:"p"},"_onTrigger()")," function.\nJust like the ",(0,a.kt)("inlineCode",{parentName:"p"},"Pausable")," example you'll have to replace the example ",(0,a.kt)("em",{parentName:"p"},"UserID")," (",(0,a.kt)("inlineCode",{parentName:"p"},"1234567b-fbe1-1234-1234-12abcde123a1"),") with your account's ",(0,a.kt)("em",{parentName:"p"},"UserID")," (see ",(0,a.kt)("a",{parentName:"p",href:"/#2-obtain-your-userid"},"2."),")."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},'// Add Easy Trigger import, can be shortened if remappings.txt is configured\nimport { Triggerable } from "lib/ez-trigger/src/Triggerable.sol";\n\ncontract YourContract is Triggerable("1234567b-fbe1-1234-1234-12abcde123a1") {\n    function _onTrigger() internal override {\n        // Custom trigger logic\n    }\n}\n')))}g.isMDXComponent=!0},8008:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/obtain_userid-1968af056a2603c072e3f6835f4abfa1.png"}}]);